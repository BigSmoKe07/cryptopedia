{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","className","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","uuid","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","Title","Typography","Homepage","globalStats","stats","level","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2f51a719.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n  }),\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.4104ffa7.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptopedia</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\nimport { Homepage, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\n        <Link to=\"/\"> <br />\n          Cryptopedia Inc.\n        </Link> <br />\n          By BigSmoke\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}